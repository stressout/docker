******************************************************************************************
************************              1 ЧАСТЬ                     ************************
******************************************************************************************

1.  +
2.  +
3.  +
4.  +
5.  +
6.  +
7.  +
8.  +
9.  +
10. +
11. +
12. +
13. +
14. +
15. +
16. +
17. +
18. + 
19. ————
20. +
21. +
22. +
23. +
24. +
25. +
26. +
27. +
28. +
29. +
30. +
31. +
32. +
33. +
34. +


******************************************************************************************
************************              2 ЧАСТЬ                     ************************
******************************************************************************************


1. Files to turn in: Dockerfile

Description: Из образа Alpine необходимо добавить в Ваш контейнер Ваш любимый текстовый редактор(Vim or emacs), который будет запускаться совместно с контейнером.

2. Files to turn in: Dockerfile + Scripts (if applicable)

Description: Из образа debian Вам необходимо добавить необходимые источники для создания сервера TeamSpeak, который будет запускаться вместе с контейнером. Это будет считаться правильным, если хотя бы один пользователь сможет подключиться к серверу и принять участие в нормальном разговоре, поэтому создайте Ваш докерфайл с правильными опциями. Ваша программа должна получать исходные тексты, когда она собирается, они не могут быть в Вашем репозитории. **********************************

***************!!!!!!!!!!!!! НЕ ИСПОЛЬЗОВАТЬ ОФФИЦИАЛЬНЫЙ ОБРАЗ ТИМСПИКА В ДОКЕРЕ !!!!!!!!!!!!!**************

3. Files to turn in: Dockerfile

Description: Вам необходимо создать ваш первый докерфайл для контейнеризации приложений на Rails. Это специальная конфигурация: это деталь докерфайла будет общей, и называться в других докефайлах, которые будут похожи на что-то подобное:

FROM ft-rails:on-build
EXPOSE 3000
CMD ["rails", "s", "-b", "0.0.0.0", "-p", "3000"]

Ваш общий контейнер должен устанавливать через (руби контейнер????) все необходимые зависимости и (wha???), затем скопировать Ваше Rails приложение в /opt/app директорию Вашего контейнера. Докер должен установить подходящие (WHAAA???) когда он запускается, но также запустить миграции и (db population???) для вашего приложения. Дочерний докерфайл должен запустить Rails сервер(пример ниже). Если вы не знаете какие команды использовать -> см. Документацию Ruby on rails.

4. Files to turn in: Dockerfile

Description: Докер может быть полезен для тестов приложений которые все еще находятся на стадии разработки без загрязнения библиотек. Вы должны разработать докерфайл который получит версию Gitlab - Community Edition для разработки, установить его со всеми зависимостями и необходимыми конфигурациями, и запустит приложение по мере его создания. Контейнер будет считаться действительным, если вы сможете получить доступ к веб-клиенту, создать пользователей и взаимодействовать через GIT с этими контейнепрами(HTTPS and SSH).

*******!!!!!!!! НЕ ИСПОЛЬЗОВАТЬ ОФФИЦИАЛЬНЫЕ ОБРАЗЫ из Gitlab !!!!!!!!!!!!!*******
